package junittest;
import static org.junit.Assert.*;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.JUnitCore;
public class MyMathTest
{
//将需要测试的类，声明成成员变量
MyMath math;
//每次运行测试方法之前都会运行该方法
@Before
public void setUp()
{
  math=new MyMath();
}
//每次运行测试用例之后都会运行该方法
@After
public void tearDown()
{
  math=null;
}

//测试一元一次方程的求解
//expected=ArithmeticException.class
//相当于断言该测试方法将会抛出ArithmeticException异常
@Test(expected=ArithmeticException.class)
public void testOneEquation()
{
  System.out.println("=================================");  
  System.out.println("=================================");
        System.out.println("测试一元一次方程求解");
  //断言该方程求解应该为-1.8
  assertEquals(math.oneEquation(5,9),-1.8,.00001);
  //断言当a==0时的情况
  assertEquals(math.oneEquation(0,3),-1);
}
//测试一元二次方程的求解
@Test
public void testTwoEquation()
{
  System.out.println("=================================");  
  System.out.println("=================================");
        System.out.println("测试一元二次方程求解");  
  double[] tmp=math.twoEquation(1,-3,2);
  //断言方程的两个解，一个为2,一个为3
  assertEquals("第一个解出错",tmp[0],2,.00001);
  assertEquals("第二个解出错",tmp[1],3,.00001);
}
//程序的入口，直接运行该测试用例
public static void main(String[] args)
{
  //运行单个的测试用例
  JUnitCore.main("junittest.MyMathTest");
}
}
